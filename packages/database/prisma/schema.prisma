generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma/client"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["bteg_data", "public"]
}

model User {
  id              String    @id(map: "User_pkey1") @db.Uuid
  bteg_id         String?
  email           String?
  phone           String?
  idcard_number   String?
  is_active       Boolean?
  address         String?
  register_number String?
  gazar_id        String?
  alba_id         String?
  heltes_id       String?
  position_name   String?
  nice_name       String?
  created_at      DateTime? @db.Timestamp(6)
  updated_at      DateTime? @db.Timestamp(6)
  first_name      String?
  last_name       String?
  organization_id String?

  @@schema("bteg_data")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model departments {
  id              String    @id @db.Uuid
  bteg_id         String?
  name            String?
  description     String?
  is_new          Boolean?
  organization_id String?
  gazar_id        String?
  darga_id        String?
  is_active       Boolean?
  sub_title       String?
  created_at      DateTime? @db.Timestamp(6)
  updated_at      DateTime? @db.Timestamp(6)

  @@schema("bteg_data")
}

model Session {
  id            String   @id
  session_token String   @unique
  expires       DateTime
  user_id       BigInt?

  @@schema("public")
}

model clause {
  id              String            @id @db.Uuid
  text            String
  referenceNumber String
  sectionId       String            @db.Uuid
  parentId        String?           @db.Uuid
  isDeleted       Boolean           @default(false)
  clause          clause?           @relation("clauseToclause", fields: [parentId], references: [id], onUpdate: NoAction)
  other_clause    clause[]          @relation("clauseToclause")
  section         section           @relation(fields: [sectionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  clause_position clause_position[]

  @@schema("public")
}

model clause_position {
  id         String                @id @db.Uuid
  clauseId   String                @db.Uuid
  positionId String                @db.Uuid
  isDeleted  Boolean               @default(false)
  type       type_clause_position?
  clause     clause                @relation(fields: [clauseId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  position   position              @relation(fields: [positionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rating     rating[]

  @@schema("public")
}

model company {
  id                 String       @id @db.Uuid
  name               String?      @db.VarChar(255)
  registrationNumber String?      @db.VarChar(255)
  isDeleted          Boolean      @default(false)
  department         department[]

  @@schema("public")
}

model department {
  id        String     @id @db.Uuid
  name      String?    @db.VarChar(255)
  companyId String?    @db.Uuid
  isDeleted Boolean    @default(false)
  company   company?   @relation(fields: [companyId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  division  division[]

  @@schema("public")
}

model division {
  id           String      @id @db.Uuid
  name         String?     @db.VarChar(255)
  departmentId String?     @db.Uuid
  isDeleted    Boolean     @default(false)
  bteg_id      Int?
  department   department? @relation(fields: [departmentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  position     position[]

  @@schema("public")
}

model policy {
  id            String    @id @db.Uuid
  name          String?   @db.VarChar(255)
  approvedDate  DateTime? @db.Date
  referenceCode String    @unique @db.VarChar(255)
  isDeleted     Boolean   @default(false)
  section       section[]

  @@schema("public")
}

model position {
  id              String            @id @db.Uuid
  name            String?           @db.VarChar(255)
  divisionId      String            @db.Uuid
  isDeleted       Boolean           @default(false)
  bteg_id         Int?
  clause_position clause_position[]
  division        division          @relation(fields: [divisionId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model rating {
  id                 String          @id @db.Uuid
  score              Int
  description        String?
  isDeleted          Boolean         @default(false)
  clause_position_id String          @db.Uuid
  rating_session_id  String          @db.Uuid
  scored_date        DateTime        @db.Date
  clause_position    clause_position @relation(fields: [clause_position_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rating_session     rating_session  @relation(fields: [rating_session_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model rating_session {
  id             String         @id @db.Uuid
  startDate      DateTime       @db.Date
  endDate        DateTime       @db.Date
  name           String?
  rating_process rating_process
  rating         rating[]

  @@schema("public")
}

model section {
  id              String   @id @db.Uuid
  policyId        String?  @db.Uuid
  text            String
  referenceNumber String?  @db.VarChar(255)
  isDeleted       Boolean  @default(false)
  clause          clause[]
  policy          policy?  @relation(fields: [policyId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

enum Role {
  USER
  HR
  ADMIN
  DARGA
  UB

  @@schema("public")
}

enum rating_process {
  ACTIVE
  END

  @@schema("public")
}

enum type_clause_position {
  IMPLEMENTATION
  MONITORING
  VERIFICATION
  DEPLOYMENT

  @@schema("public")
}
